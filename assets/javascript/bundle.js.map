{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/javascript/board.js","webpack:///./assets/javascript/buttons.js","webpack:///./assets/javascript/sudoku.js","webpack:///./assets/javascript/tile.js","webpack:///./assets/javascript/validateBoard.js"],"names":["unsolvedBoard","solvedBoard","Board","render","board","document","querySelector","innerHTML","forEach","num","idx","diff","diffMap","Array","fill","zero","assigned","rand","Math","ceil","random","validateSubgrid","tile","tiles","tileRowNum","dataset","row","rowTiles","querySelectorAll","rowTileNum","rowTile","textContent","value","index","parentNode","classList","add","e","solved","tagName","parseInt","window","alert","inputs","console","log","input","enableButtons","submitButton","addEventListener","checkProgress","bind","giveUpButton","solve","resetButton","reset","validateInput","includes","data","target","length","determineSubgrid","col","gridRow","floor","gridCol","subGrid","populateTile","boardDiv","tileDiv","createElement","className","column","appendChild","validateColumn","randColIndex","i","validateRow","randRowIndex","rowStart","rowEnd","randSubgrid","tileIdx","tileColIndex","tileRowIndex","tileSubgrid","validateRandomNumber"],"mappings":"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","file":"assets/javascript/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./assets/javascript/sudoku.js\");\n","import populateTile from './tile';\nimport validateRandomNumber from './validateBoard';\n\nconst unsolvedBoard = [\n    5, 3, 0, 0, 7, 0, 0, 0, 0,\n    6, 0, 0, 1, 9, 5, 0, 0, 0,\n    0, 9, 8, 0, 0, 0, 0, 6, 0,\n    8, 0, 0, 0, 6, 0, 0, 0, 3,\n    4, 0, 0, 8, 0, 3, 0, 0, 1,\n    7, 0, 0, 0, 2, 0, 0, 0, 6,\n    0, 6, 0, 0, 0, 0, 2, 8, 0,\n    0, 0, 0, 4, 1, 9, 0, 0, 5,\n    0, 0, 0, 0, 8, 0, 0, 7, 9\n]\n\nconst solvedBoard = [\n    5, 3, 4, 6, 7, 8, 9, 1, 2,\n    6, 7, 2, 1, 9, 5, 3, 4, 8,\n    1, 9, 8, 3, 4, 2, 5, 6, 7,\n    8, 5, 9, 7, 6, 1, 4, 2, 3,\n    4, 2, 6, 8, 5, 3, 7, 9, 1,\n    7, 1, 3, 9, 2, 4, 8, 5, 6,\n    9, 6, 1, 5, 3, 7, 2, 8, 4,\n    2, 8, 7, 4, 1, 9, 6, 3, 5,\n    3, 4, 5, 2, 8, 6, 1, 7, 9\n]\n\nexport default class Board { \n    constructor() {\n        // const unsolvedBoard = unsolvedBoard()        \n        this.render(unsolvedBoard);\n        this.solvedBoard = solvedBoard;\n    }\n\n    render(unsolvedBoard) {\n        // clear previous board, if any\n        const board = document.querySelector('.board');\n        board.innerHTML = '';\n\n        unsolvedBoard.forEach((num, idx) => {\n            populateTile(num, idx);\n        });\n    }\n\n    createSolvedBoard(diff = 'easy') {\n        // number of tiles to be given in puzzle\n        const diffMap = {\n            'easy': 45,\n            'medium': 35,\n            'hard': 25\n        }\n\n        let board = new Array(81).fill(0); \n        board.forEach((zero, idx) => {\n            let assigned = false;\n            while (!assigned) {\n                const rand = Math.ceil(Math.random() * 9);\n                if (this.validateSubgrid(rand, idx, board)) {\n                    board[idx] = rand;\n                    assigned = true;\n                }\n            }\n        })\n\n        return board;        \n    }\n    \n    unsolveBoard(solvedBoard) {\n        // let j = diffMap[diff];  \n        // solvedBoard.forEach((num, idx) => {\n        //     // Math.ceil(Math.random() * 10)\n        //     // check against row \n        //     const rowIndex = Math.floor(idx / 9);\n        //     const rowStart = rowIndex * 9;\n        //     const rowEnd = rowStart + 9;\n        //     for (let i = rowStart; i < rowEnd; i++) {\n        //         let placed = false; \n        //     }\n    \n        // numbers.forEach((num, idx) => {\n        //     populateTile(num, idx);\n        // });\n    \n    \n    \n            // check against column \n        // })\n\n    }\n\n    checkRow(tile, tiles) {\n        const tileRowNum = tile.dataset.row;\n        const rowTiles = document.querySelectorAll(`[data-row=\"${tileRowNum}\"]`);\n        // console.log('tileRowNum', tileRowNum);\n        // console.log('rowTiles', rowTiles);\n        \n        rowTiles.forEach(rowTile => {\n            // console.log(rowTile.value || rowTile.textContent);\n            // console.log('tile index', tile.dataset.index);\n            // console.log('rowTile index', rowTile.dataset.index);\n            const rowTileNum = rowTile.textContent ? rowTile.textContent : rowTile.value;\n\n            // don't check a tile against itself   \n            if (tile.dataset.index === rowTile.dataset.index) {\n                return;\n             } else if (rowTile.value === '') {\n                // don't check against an empty input \n                return;\n            } else {\n                if (tile.value === rowTileNum) {\n                    tile.parentNode.classList.add('wrong');\n                }\n            }\n        });\n    }\n\n    // button methods     \n    checkProgress(e) {\n        const tiles = document.querySelectorAll('.tile');\n        let solved = true; \n        tiles.forEach((tile, idx) => {\n            // only check input (not span) tiles \n            if (tile.tagName === 'SPAN') {\n                return ; \n            } else if (tile.value === '') {\n                solved = false;\n            } else if (solvedBoard[parseInt(tile.dataset.index)] !== parseInt(tile.value)) {\n                tile.parentNode.classList.add('wrong');\n                solved = false;\n            }\n        });\n\n        if (solved) {\n            window.alert('Congratulations! You solved the puzzle!');\n        }\n    }\n\n    solve(e) {\n        const inputs = document.querySelectorAll('.tile.input');\n        console.log(inputs);\n        inputs.forEach((input, idx) => {\n            input.value = solvedBoard[idx];\n        }) \n    }\n\n    reset(e) {\n        this.render(unsolvedBoard);\n    }\n\n\n}\n\n\n// exports.checkBoard = () => {\n    // console.log('checking the board');\n// }\n\n// function setupBoard (board) {\n//     board.forEach((num, idx) => {\n//         populateTile(num, idx);\n//     })\n// }\n\n// function createBoards(diff = 'easy') {\n//     const diffMap = {\n//         'easy': 45,\n//         'medium': 35,\n//         'hard': 25\n//     }\n    \n//     let solvedBoard = []; \n    \n//     for (let i = 0; i < 81; i++) {\n//         solvedBoard.push(0);\n//     }\n\n//     let j = diffMap[diff];  \n//     solvedBoard.forEach((num, idx) => {\n//         // Math.ceil(Math.random() * 10)\n//         // check against row \n//         const rowIndex = Math.floor(idx / 9);\n//         const rowStart = rowIndex * 9;\n//         const rowEnd = rowStart + 9;\n//         for (let i = rowStart; i < rowEnd; i++) {\n//             let placed = false; \n//         }\n        \n\n//         // check against column \n//     })\n\n// } \n\n\n","import Board from './board';\n\nfunction enableButtons(board) {    \n    const submitButton = document.querySelector('.check');\n    submitButton.addEventListener('click', board.checkProgress.bind(board));\n    \n    const giveUpButton = document.querySelector('.give-up');\n    giveUpButton.addEventListener('click', board.solve);\n\n    const resetButton = document.querySelector('.reset');\n    resetButton.addEventListener('click', board.reset.bind(board));\n}    \n\nexport default enableButtons; ","import Board from './board.js';\nimport enableButtons from './buttons';\n\n\nconst board = new Board();\nenableButtons(board);\n\n\n\n\n","function validateInput(e) {        \n    // only permit a single number as input \n    if (![\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(e.data)) {\n        e.target.value = '';\n    } else if (e.data.length === 1) {\n        e.target.value = e.data;\n    }\n\n    // TODO: Validate against all other numbers in row & column \n    // validate against row \n    // validate against column \n}\n\nfunction determineSubgrid(col, row) {\n    // formula to determine subgrid found at: https://medium.com/@0xsven/sudoku-validation-with-javascript-1297712093bf\n    const gridRow = Math.floor(row / 3);\n    const gridCol = Math.floor(col / 3);\n    const subGrid= gridRow * 3 + gridCol;\n    return subGrid;\n}\n\nfunction populateTile(num, idx) {\n    const boardDiv = document.querySelector('.board');\n    const tileDiv = document.createElement('div')\n    tileDiv.className = 'tile-div';\n    \n    let tile;\n    if (num === 0) {\n        tile = document.createElement('input');\n        tile.className = 'tile input';\n    } else {\n        tile = document.createElement('span');\n        tile.textContent = num;\n        tile.className = 'tile span';\n    }\n\n    // add index, column, and row as data attributes \n    const col = idx % 9;\n    const row = Math.floor(idx / 9);\n    tile.dataset.index = idx;\n    tile.dataset.column = col;\n    tile.dataset.row = row;\n    tile.dataset.subGrid = determineSubgrid(col, row);\n\n    boardDiv.appendChild(tileDiv);\n    tileDiv.appendChild(tile); \n\n    tile.addEventListener('input', validateInput);\n}\n\nexport default populateTile;","function validateColumn(rand, idx, board) {\n    const randColIndex = idx % 9;\n    for (let i = randColIndex; i < 81; i += 9) {\n        if (rand === board[i]) return false;\n    }\n    // for (let i = randColIndex * Math.floor(idx % 9); i > 0; i -= 9) {\n    //     console.log(i);\n    //     if (rand === board[i]) {\n    //         return false;\n    //     }\n    // }\n\n    return true;\n}\n\nfunction validateRow(rand, idx, board) {\n    const randRowIndex = Math.floor(idx / 9);\n    const randColIndex = idx % 9;\n    const rowStart = randRowIndex * 9;\n    const rowEnd = rowStart + 9;\n\n    if (randColIndex === 0) return true;\n    for (let i = idx - 1; i >= rowStart; i--) {\n        if (rand === board[i]) return false;\n    }\n    return true;\n}\n\nfunction validateSubgrid(rand, idx, board) {\n    const randColIndex = idx % 9;\n    const randRowIndex = Math.floor(idx / 9);\n    const randSubgrid = this.determineSubgrid(randColIndex, randRowIndex);\n\n    board.forEach((tile, tileIdx) => {\n        const tileColIndex = tileIdx % 9;\n        const tileRowIndex = Math.floor(tileIdx / 9);\n        const tileSubgrid = this.determineSubgrid(tileColIndex, tileRowIndex);\n\n        if (randSubgrid === tileSubgrid && rand === tile && idx !== tileIdx) {\n            console.log('hello')\n            return false;\n        }\n    });\n    return true;\n}\n\nfunction determineSubgrid(col, row) {\n    // formula to determine subgrid found at: https://medium.com/@0xsven/sudoku-validation-with-javascript-1297712093bf\n    const gridRow = Math.floor(row / 3);\n    const gridCol = Math.floor(col / 3);\n    const subGrid = gridRow * 3 + gridCol;\n    return subGrid;\n}\n\nfunction validateRandomNumber() {\n\n}\n\nexport default validateRandomNumber;"],"sourceRoot":""}